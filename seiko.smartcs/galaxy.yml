### REQUIRED

# The namespace of the collection. This can be a company/brand/organization or product namespace under which all
# content lives.
namespace: seiko

# The name of the collection.
name: smartcs

# The version of the collection.
version: 1.5.0-dev1

# The path to the Markdown (.md) readme file.
readme: README.md

# A list of the collection's content authors.
authors:
  - Seiko Solutions Inc.


### OPTIONAL but strongly recommended

# A short summary description of the collection
description: Ansible Network Collection for Seiko SmartCS devices

# The path to the license file for the collection. This path is relative to the root of the collection.
license_file: 'LICENSE'

# A list of tags you want to associate with the collection for indexing/searching.
tags: [seiko, smartcs, networking]

# Collections that this collection requires to be installed for it to be usable. The key of the dict is the
# collection label 'namespace.name'. The value is a version range
# L(specifiers,https://python-semanticversion.readthedocs.io/en/latest/#requirement-specification). Multiple version
# range specifiers can be set and are separated by ','
dependencies:
  "ansible.netcommon": "*"


### URLs

# The URL of the originating SCM repository
repository: https://github.com/ssol-smartcs/ansible-collections

# The URL to online docs
documentation: https://github.com/ssol-smartcs/ansible-collections/tree/main/seiko.smartcs/docs

# The URL to the homepage of the collection/project
homepage: https://www.seiko-sol.co.jp/products/console-server/console-server_automation

# The URL to the collection issue tracker
issues: https://github.com/ssol-smartcs/ansible-collections/issues


# A list of file glob-like patterns used to filter any files or directories that should not be included in the build
# artifact. A pattern is matched from the relative path of the file or directory of the collection directory. This
# uses 'fnmatch' to match the files or directories. Some directories and files like 'galaxy.yml', '*.pyc', '*.retry',
# and '.git' are always filtered
build_ignore:
  - venv
  - 'galaxy.yml'
  - '*__pycache__'
  - '__pycache__'
  - '*.bak'
  - '*.tar'
  - '*.pyc'
  - '*.svn'
  - '*.retry'
  - '*.git'
